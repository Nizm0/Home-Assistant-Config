$(function(){ //DOM Ready

    function navigate(url)
    {
        window.location.href = url;
    }

    $(document).attr("title", "Main Panel");
    content_width = (120 + 5) * 10 + 5
    $('.gridster').width(content_width)
    $(".gridster ul").gridster({
        widget_margins: [5, 5],
        widget_base_dimensions: [120, 120],
        avoid_overlapped_widgets: true,
        max_rows: 15,
        max_size_x: 10,
        shift_widgets_up: false
    }).data('gridster').disable();
    
    // Add Widgets

    var gridster = $(".gridster ul").gridster().data('gridster');
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseclock-default-clock" id="default-clock"><h1 class="date"data-bind="text: date, attr: {style: date_style}"></h1><h2 class="time" data-bind="text: time, attr: {style: time_style}"></h2></div></li>', 2, 1, 1, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-light-level" id="default-light-level"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 3, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-sensor-weather-temperature" id="default-sensor-weather-temperature"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 4, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-device-tracker-nizm0-phone" id="default-device-tracker-nizm0-phone"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 5, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-device-tracker-gosia-phone" id="default-device-tracker-gosia-phone"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 6, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-corridor-sensor" id="default-corridor-sensor"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 7, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-main-door-sensor" id="default-main-door-sensor"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 8, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-base_light_with_brightness-default-office-gateway-light" id="default-office-gateway-light"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="iconcontainer" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><div class="slidercontainer"><input type="range" data-bind="attr: {min: MinValue, max: MaxValue, step: StepValue, style: slider_style}, value: Brightness" ></div></div></li>', 1, 1, 1, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-kids-light" id="default-kids-light"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 2, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baselight-default-group-all-lights" id="default-group-all-lights"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><span class="toggle-area" id="switch"></span><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="html: units, attr:{style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 1, 1, 3, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-base_light_with_brightness-default-bedroom-light-red" id="default-bedroom-light-red"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="iconcontainer" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><div class="slidercontainer"><input type="range" data-bind="attr: {min: MinValue, max: MaxValue, step: StepValue, style: slider_style}, value: Brightness" ></div></div></li>', 1, 1, 4, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baselight-default-bedroom-light-white" id="default-bedroom-light-white"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><span class="toggle-area" id="switch"></span><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="html: units, attr:{style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 1, 1, 5, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseslider-default-slider" id="default-slider"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><div class="levelunit"><h2 class="level" data-bind="text: level, attr:{ style: level_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 2, 1, 6, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-kids-temperature" id="default-kids-temperature"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 1, 3)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-bedroom-temperature" id="default-bedroom-temperature"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 2, 3)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-office-temperature" id="default-office-temperature"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 3, 3)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-bathroom-temperature" id="default-bathroom-temperature"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 4, 3)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-kitchen-temperature" id="default-kitchen-temperature"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 5, 3)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-kids-humidity" id="default-kids-humidity"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 1, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-bedroom-humidity" id="default-bedroom-humidity"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 2, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-office-humidity" id="default-office-humidity"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 3, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-bathroom-humidity" id="default-bathroom-humidity"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 4, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-kitchen-humidity" id="default-kitchen-humidity"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit" data-bind="attr:{ style: container_style}"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 5, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basejavascript-default-load-system" id="default-load-system"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 1, 1, 1, 5)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basejavascript-default-reload" id="default-reload"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 1, 1, 2, 5)
    
    
    
    var widgets = {}
    // Initialize Widgets
    
        widgets["default-clock"] = new baseclock("default-clock", "", "default", {'time_style': 'color: cyan;', 'date_style': 'color: white;', 'css': {}, 'widget_type': 'baseclock', 'use_comma': 0, 'static_icons': [], 'use_hass_icon': 1, 'icons': [], 'time_format': '24hr', 'precision': 1, 'fields': {'date': '', 'time': ''}, 'static_css': {'date_style': 'color: white;', 'time_style': 'color: cyan;', 'widget_style': 'background-color: #444;'}, 'namespace': 'default', 'show_seconds': 1, 'date_format_country': 'pl'})
    
        widgets["default-light-level"] = new basedisplay("default-light-level", "", "default", {'entity': 'sensor.office_gateway_illumination', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'entity_to_sub_entity_attribute': '', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'shorten': 1, 'sub_entity_to_entity_attribute': '', 'precision': 0, 'units': 'lux', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Office brightness', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-sensor-weather-temperature"] = new basedisplay("default-sensor-weather-temperature", "", "default", {'entity': 'sensor.weather_temperature', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'fields': {'title2': '', 'unit': '', 'value': '', 'title': '', 'state_text': ''}, 'title_is_friendly_name': 1, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-device-tracker-nizm0-phone"] = new baseswitch("default-device-tracker-nizm0-phone", "", "default", {'entity': 'device_tracker.nizm0_phone', 'state_inactive': 'not_home', 'icons': {'icon_off': 'fa-user', 'icon_on': 'fa-user'}, 'state_map': {'home': 'HOME', 'not_home': 'AWAY'}, 'widget_type': 'baseswitch', 'post_service_inactive': {'dev_id': '', 'service': 'device_tracker/see', 'location_name': 'not_home'}, 'state_text': 1, 'state_active': 'home', 'use_comma': 0, 'static_icons': [], 'use_hass_icon': 1, 'post_service_active': {'dev_id': '', 'service': 'device_tracker/see', 'location_name': 'home'}, 'precision': 1, 'enable': 0, 'fields': {'title2': '', 'icon_style': '', 'icon': '', 'title': '', 'state_text': ''}, 'title_is_friendly_name': 1, 'namespace': 'default', 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;', 'state_text_style': 'color: #fff;'}})
    
        widgets["default-device-tracker-gosia-phone"] = new baseswitch("default-device-tracker-gosia-phone", "", "default", {'entity': 'device_tracker.gosia_phone', 'state_inactive': 'not_home', 'icons': {'icon_off': 'fa-user', 'icon_on': 'fa-user'}, 'state_map': {'home': 'HOME', 'not_home': 'AWAY'}, 'widget_type': 'baseswitch', 'post_service_inactive': {'dev_id': '', 'service': 'device_tracker/see', 'location_name': 'not_home'}, 'state_text': 1, 'state_active': 'home', 'use_comma': 0, 'static_icons': [], 'use_hass_icon': 1, 'post_service_active': {'dev_id': '', 'service': 'device_tracker/see', 'location_name': 'home'}, 'precision': 1, 'enable': 0, 'fields': {'title2': '', 'icon_style': '', 'icon': '', 'title': '', 'state_text': ''}, 'title_is_friendly_name': 1, 'namespace': 'default', 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;', 'state_text_style': 'color: #fff;'}})
    
        widgets["default-corridor-sensor"] = new baseswitch("default-corridor-sensor", "", "default", {'entity': 'binary_sensor.corridor_motion_sensor', 'state_inactive': 'off', 'icons': {'icon_off': 'mdi-human-male', 'icon_on': 'mdi-walk'}, 'icon_off': 'mdi-human-male', 'widget_type': 'baseswitch', 'css': {'icon_style_active': 'color: #ff0055;', 'icon_style_inactive': 'color: #888;'}, 'state_active': 'on', 'use_comma': 0, 'static_icons': [], 'use_hass_icon': 1, 'precision': 1, 'fields': {'title2': '', 'icon_style': '', 'icon': '', 'title': 'Corridor motion sensor', 'state_text': ''}, 'static_css': {'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;', 'state_text_style': 'color: #fff;'}, 'namespace': 'default', 'icon_on': 'mdi-walk'})
    
        widgets["default-main-door-sensor"] = new baseswitch("default-main-door-sensor", "", "default", {'entity': 'binary_sensor.home_door_sensor', 'state_inactive': 'off', 'icons': {'icon_off': 'mdi-door-closed', 'icon_on': 'mdi-door-open'}, 'icon_off': 'mdi-door-closed', 'widget_type': 'baseswitch', 'css': {'icon_style_active': 'color: #ff0055;', 'icon_style_inactive': 'color: #888;'}, 'state_active': 'on', 'use_comma': 0, 'static_icons': [], 'use_hass_icon': 1, 'precision': 1, 'fields': {'title2': '', 'icon_style': '', 'icon': '', 'title': 'Main door sensor', 'state_text': ''}, 'static_css': {'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;', 'state_text_style': 'color: #fff;'}, 'namespace': 'default', 'icon_on': 'mdi-door-open'})
    
        widgets["default-office-gateway-light"] = new base_light_with_brightness("default-office-gateway-light", "", "default", {'entity': 'light.office_gateway_light', 'icons': {'icon_off': 'mdi-lightbulb', 'icon_on': 'mdi-lightbulb'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'light.office_gateway_light'}, 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'on_attributes': {'brightness': 100}, 'use_comma': 0, 'static_icons': [], 'use_hass_icon': 1, 'widget_type': 'base_light_with_brightness', 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'light.office_gateway_light'}, 'precision': 1, 'fields': {'MaxValue': '255', 'MinValue': '0', 'StepValue': '1', 'title': 'Office gateway', 'title2': '', 'icon_style': '', 'Brightness': '', 'icon': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'slider_style': '', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}})
    
        widgets["default-kids-light"] = new baseswitch("default-kids-light", "", "default", {'entity': 'input_boolean.kids_light', 'state_inactive': 'off', 'icons': {'icon_off': 'fa-sliders', 'icon_on': 'fa-sliders'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'input_boolean.kids_light'}, 'widget_type': 'baseswitch', 'state_active': 'on', 'use_comma': 0, 'static_icons': [], 'use_hass_icon': 1, 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'input_boolean.kids_light'}, 'precision': 1, 'enable': 1, 'fields': {'title2': '', 'icon_style': '', 'icon': '', 'title': 'Kids light', 'state_text': ''}, 'namespace': 'default', 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;', 'state_text_style': 'color: #fff;'}})
    
        widgets["default-group-all-lights"] = new baselight("default-group-all-lights", "", "default", {'entity': 'group.all_lights', 'icons': {'icon_off': 'fa-circle-thin', 'icon_on': 'fa-circle'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'group.all_lights'}, 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'use_comma': 0, 'static_icons': {'icon_up': 'fa-plus', 'icon_down': 'fa-minus'}, 'use_hass_icon': 1, 'widget_type': 'baselight', 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'group.all_lights'}, 'precision': 1, 'fields': {'title2': '', 'icon_style': '', 'units': '%', 'level': '', 'state_text': '', 'icon': '', 'title': ''}, 'title_is_friendly_name': 1, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'title_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'unit_style': 'color: #fff;', 'level_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}})
    
        widgets["default-bedroom-light-red"] = new base_light_with_brightness("default-bedroom-light-red", "", "default", {'entity': 'light.bedroom_main_light', 'icons': {'icon_off': 'mdi-lightbulb', 'icon_on': 'mdi-lightbulb'}, 'color': 'red', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'light.bedroom_main_light'}, 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'use_comma': 0, 'static_icons': [], 'use_hass_icon': 1, 'widget_type': 'base_light_with_brightness', 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'light.bedroom_main_light'}, 'precision': 1, 'fields': {'MaxValue': '255', 'MinValue': '0', 'StepValue': '1', 'title': 'Bedroom light red', 'title2': '', 'icon_style': '', 'Brightness': '', 'icon': ''}, 'namespace': 'default', 'on_attributess': 5, 'static_css': {'title2_style': 'color: #fff;', 'slider_style': '', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}})
    
        widgets["default-bedroom-light-white"] = new baselight("default-bedroom-light-white", "", "default", {'entity': 'light.bedroom_main_light', 'icons': {'icon_off': 'fa-circle-thin', 'icon_on': 'fa-circle'}, 'color': 'white', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'light.bedroom_main_light'}, 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'use_comma': 0, 'static_icons': {'icon_up': 'fa-plus', 'icon_down': 'fa-minus'}, 'use_hass_icon': 1, 'widget_type': 'baselight', 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'light.bedroom_main_light'}, 'precision': 1, 'fields': {'title2': '', 'icon_style': '', 'units': '%', 'level': '', 'state_text': '', 'icon': '', 'title': 'Bedroom light white'}, 'namespace': 'default', 'on_attributess': 100, 'static_css': {'title2_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'title_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'unit_style': 'color: #fff;', 'level_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}})
    
        widgets["default-slider"] = new baseslider("default-slider", "", "default", {'entity': 'sensor.office_gateway_illumination', 'icons': [], 'css': {}, 'widget_type': 'baseslider', 'post_service': {'service': 'input_number/set_value', 'entity_id': 'sensor.office_gateway_illumination'}, 'use_comma': 0, 'static_icons': {'icon_up': 'fa-plus', 'icon_down': 'fa-minus'}, 'use_hass_icon': 1, 'precision': 1, 'units': '%', 'fields': {'title2': '', 'unit': '', 'title': 'test lihgt slider', 'level': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'title_style': 'color: #fff;', 'unit_style': 'color: #00aaff;', 'level_style': 'color: #00aaff;', 'widget_style': 'background-color: #444;'}})
    
        widgets["default-kids-temperature"] = new basedisplay("default-kids-temperature", "", "default", {'entity': 'sensor.kids_temperature', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '&deg;C', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Kids room', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-bedroom-temperature"] = new basedisplay("default-bedroom-temperature", "", "default", {'entity': 'sensor.bedroom_temperature', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '&deg;C', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Bedroom', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-office-temperature"] = new basedisplay("default-office-temperature", "", "default", {'entity': 'sensor.office_temperature', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '&deg;C', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Office', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-bathroom-temperature"] = new basedisplay("default-bathroom-temperature", "", "default", {'entity': 'sensor.bathroom_temperature', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '&deg;C', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Bathroom', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-kitchen-temperature"] = new basedisplay("default-kitchen-temperature", "", "default", {'entity': 'sensor.kitchen_temperature', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '&deg;C', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Kitchen', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-kids-humidity"] = new basedisplay("default-kids-humidity", "", "default", {'entity': 'sensor.kids_humidity', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '%', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Kids room', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-bedroom-humidity"] = new basedisplay("default-bedroom-humidity", "", "default", {'entity': 'sensor.bedroom_humidity', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '%', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Bedroom', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-office-humidity"] = new basedisplay("default-office-humidity", "", "default", {'entity': 'sensor.office_humidity', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '%', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Office', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-bathroom-humidity"] = new basedisplay("default-bathroom-humidity", "", "default", {'entity': 'sensor.bathroom_humidity', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '%', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Bathroom', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-kitchen-humidity"] = new basedisplay("default-kitchen-humidity", "", "default", {'entity': 'sensor.kitchen_humidity', 'icons': [], 'css': {'text_style': 'font-size: 100%;color: #fff;', 'unit_style': 'font-size: 100%;color: #00aaff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay', 'use_comma': 0, 'sub_entity': '', 'static_icons': [], 'use_hass_icon': 1, 'entity_to_sub_entity_attribute': '', 'sub_entity_to_entity_attribute': '', 'precision': 1, 'units': '%', 'fields': {'title2': '', 'unit': '', 'value': '', 'title': 'Kitchen', 'state_text': ''}, 'namespace': 'default', 'static_css': {'title2_style': 'color: #fff;', 'container_style': '', 'widget_style': 'background-color: #444;', 'title_style': 'color: #fff;', 'state_text_style': 'font-size: 100%;color: #fff;'}})
    
        widgets["default-load-system"] = new basejavascript("default-load-system", "", "default", {'namespace': 'default', 'widget_type': 'basejavascript', 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'use_comma': 0, 'static_icons': [], 'use_hass_icon': 1, 'dashboard': 'System', 'precision': 1, 'fields': {'title2': '', 'icon_style': '', 'icon': '', 'title': 'System'}, 'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'fa-cogs'}, 'icon_inactive': 'fa-cogs', 'static_css': {'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}})
    
        widgets["default-reload"] = new basejavascript("default-reload", "", "default", {'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'fa-refresh'}, 'namespace': 'default', 'command': 'location.reload(true)', 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'widget_type': 'basejavascript', 'precision': 1, 'fields': {'title2': '', 'icon_style': '', 'icon': '', 'title': ''}, 'static_css': {'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'use_comma': 0, 'use_hass_icon': 1, 'static_icons': []})
    

    // Setup click handler to cancel timeout navigations

    $( ".gridster" ).click(function(){
        clearTimeout(myTimeout);
        if (myTimeoutSticky) {
            myTimeout = setTimeout(function() { navigate(myTimeoutUrl); }, myTimeoutDelay);
        }
    });

    // Set up timeout

    var myTimeout;
    var myTimeoutUrl;
    var myTimeoutDelay;
    var myTimeoutSticky = 0;

    if (location.search != "")
    {
        var query = location.search.substr(1);
        var result = {};
        query.split("&").forEach(function(part) {
        var item = part.split("=");
        result[item[0]] = decodeURIComponent(item[1]);
        });

        if ("timeout" in result && "return" in result)
        {
            url = result.return
            argcount = 0
            for (arg in result)
            {
                if (arg != "timeout" && arg != "return" && arg != "sticky")
                {
                    if (argcount == 0)
                    {
                        url += "?";
                    }
                    else
                    {
                        url += "?";
                    }
                    argcount ++;
                    url += arg + "=" + result[arg]
                }
            }
            if ("sticky" in result)
            {
                myTimeoutSticky = (result.sticky == "1");
            }
            myTimeoutUrl = url;
            myTimeoutDelay = result.timeout * 1000;
            myTimeout = setTimeout(function() { navigate(url); }, result.timeout * 1000);
        }
    }

    // Start listening for HA Events
    if (location.protocol == 'https:')
    {
        wsprot = "wss:"
    }
    else
    {
        wsprot = "ws:"
    }
    var stream_url = wsprot + '//' + location.host + '/stream'
    ha_status(stream_url, "Main Panel", widgets);

});