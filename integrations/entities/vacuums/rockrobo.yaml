# vacuum:
# - platform: xiaomi_miio
#   host: 192.168.1.150
#   name: Rockrobo
#   token: !secret xiaomi_rockrobo_key

input_boolean:
  ready_to_vacuum:
    name: Flor is ready to vacuum
    icon: mdi:robot-vacuum
    # initial: off
    # restore_state:
  # vacuum_needs_emptying:
  #   name: Vacuum needs emptying
  #   icon: mdi:delete-circle

input_datetime:
  rockrobo_day_time:
    name: Vacuum date time
    has_date: false
    has_time: true
    # initial: '15:00'

input_number:
  rockrobo_cleaned_area:
    name: Cleared area between emptying
    mode: box
    min: 0
    max: 200

camera:
  - platform: xiaomi_cloud_map_extractor
    host: !secret xiaomi_vacuum_host
    token: !secret xiaomi_rockrobo_key
    username: !secret xiaomi_cloud_username
    password: !secret xiaomi_cloud_password
    draw: ["all"]
    attributes:
      - calibration_points
      - charger
      - goto
      # - goto_path
      # - goto_predicted_path
      - image
      - is_empty
      - map_name
      - no_go_areas
      - no_mopping_areas
      # - obstacles
      # - path
      - room_numbers
      - rooms
      - vacuum_position
      - vacuum_room
      # - walls
      - zones
    map_transformation:
      #   scale: 1
      trim:
        top: 24
        bottom: 22
        left: 28
        right: 23
    scan_interval:
      seconds: 10
    auto_update: true
    colors:
      color_map_inside: [32, 115, 185]
      color_map_outside: [75, 75, 75, 200] ## [19, 87, 148]
      color_map_wall: [100, 196, 254]
      color_map_wall_v2: [93, 109, 126]
      color_grey_wall: [93, 109, 126]
      color_path: [255, 255, 255] ##[147, 194, 238]
      color_goto_path: [0, 255, 0]
      color_predicted_path: [255, 255, 0, 0]
      color_zones: [0xAD, 0xD8, 0xFF, 0x8F]
      color_zones_outline: [0xAD, 0xD8, 0xFF]
      color_virtual_walls: [255, 0, 0]
      color_no_go_zones: [255, 33, 55, 127]
      color_no_go_zones_outline: [255, 0, 0]
      color_no_mop_zones: [163, 130, 211, 127]
      color_no_mop_zones_outline: [163, 130, 211]
      color_charger: [0x66, 0xfe, 0xda, 0x7f]
      color_robo: [75, 235, 149]
      color_unknown: [0, 0, 0]
      color_scan: [0xDF, 0xDF, 0xDF]

# sensor:
#   - platform: template
#     sensors:
#       vacuum_battery:
#         # entity_id: vacuum.rockrobo
#         friendly_name: "Vacuum - Battery"
#         value_template: "{{ states.vacuum.rockrobo.attributes.battery_level }}"
#         device_class: battery
#         unit_of_measurement: "%"

#       vacuum_main_brush:
#         # entity_id: vacuum.rockrobo
#         friendly_name: "Vacuum - Main Brush left"
#         value_template: "{{ states.vacuum.rockrobo.attributes.main_brush_left }}"
#         # device_class: battery
#         # unit_of_measurement: '%'

#       vacuum_side_brush:
#         # entity_id: vacuum.rockrobo
#         friendly_name: "Vacuum - Side Brush left"
#         value_template: "{{ states.vacuum.rockrobo.attributes.side_brush_left }}"
#         # device_class: battery
#         # unit_of_measurement: '%'

#       vacuum_filter:
#         # entity_id: vacuum.rockrobo
#         friendly_name: "Vacuum - Filter left"
#         value_template: "{{ states.vacuum.rockrobo.attributes.filter_left }}"
#         # device_class: battery
#         # unit_of_measurement: '%'

#       vacuum_sensors:
#         # entity_id: vacuum.rockrobo
#         friendly_name: "Vacuum - Sensor dirty left"
#         value_template: "{{ states.vacuum.rockrobo.attributes.sensor_dirty_left }}"
#         # device_class: battery
#         # unit_of_measurement: '%'

switch:
  - platform: template
    switches:
      rockrobo_switch:
        # entity_id: vacuum.rockrobo
        value_template: "{{ is_state('vacuum.rockrobo', 'cleaning') }}"
        turn_on:
          service: vacuum.start
          data:
            entity_id: vacuum.rockrobo
        turn_off:
          service: vacuum.stop
          data:
            entity_id: vacuum.rockrobo

automation:
  - alias: (Vacuum) Monitoring vacuum maintanance
    id: 597de832-5fac-4df3-b5ab-9c9756585548
    initial_state: on
    mode: single
    trigger:
      # - platform: template
      #   value_template: "{% if is_state_attr('vacuum.rockrobo', 'sensor_dirty_left', 5) %}true{% endif %}"
      - platform: numeric_state
        entity_id: sensor.rockrobo_sensor_dirty_left
        below: 1800
        id: sensors
      - platform: numeric_state
        entity_id: sensor.rockrobo_filter_left
        below: 3600
        id: filters
      - platform: numeric_state
        entity_id: sensor.rockrobo_main_brush_left
        below: 3600
        id: brush_main
      - platform: numeric_state
        entity_id: sensor.rockrobo_side_brush_left
        below: 3600
        id: brush_side
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: sensors
            sequence:
              - service: todoist.new_task
                data_template:
                  content: "Clean sensors in vacuum rockrobo"
                  priority: 2
                  due_date_string: "today"
          - conditions:
              - condition: trigger
                id: filters
            sequence:
              - service: todoist.new_task
                data_template:
                  content: "Replace filter in vacuum rockrobo"
                  priority: 2
                  due_date_string: "today"
          - conditions:
              - condition: trigger
                id: brush_mine
            sequence:
              - service: todoist.new_task
                data_template:
                  content: "Replace mine in vacuum rockrobo"
                  priority: 2
                  due_date_string: "today"
          - conditions:
              - condition: trigger
                id: brush_side
            sequence:
              - service: todoist.new_task
                data_template:
                  content: "Replace side brush in vacuum rockrobo"
                  priority: 2
                  due_date_string: "today"
      - delay:
          hours: 0
          minutes: 30
          seconds: 0
          milliseconds: 0
