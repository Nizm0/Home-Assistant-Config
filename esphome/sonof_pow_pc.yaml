substitutions:
  # Modify variables based on your settings
  hostname: 'sonof_pow_pc'
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_time: 1min

esphome:
  name: $hostname
  platform: ESP8266
  board: esp01_1m
  # on_boot:
  #   priority: 100 # Highest priority, ensures light turns on without delay.
  #   then:
  #     - switch.turn_on: fakebutton

wifi:
  ssid: $ssid
  password: $password
  reboot_timeout: $reboot_time

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  reboot_timeout: $reboot_time

web_server:
  port: 80

ota:

uart:
  rx_pin: RX
  baud_rate: 4800

sensor:
  - platform: wifi_signal
    name: "PC POW WiFi Signal"
    update_interval: 60s
  - platform: uptime
    name: "PC POW Uptime"
  - platform: hlw8012
    update_interval: 2s
    sel_pin: 5
    cf_pin: 14
    cf1_pin: 13
    current:
      name: "PC Current"
    voltage:
      name: "PC Voltage"
    power:
      name: "PC Power"
      on_value_range:
        - above: 4.0
          then:
            - light.turn_on: led
        - below: 3.0
          then:
            - light.turn_off: led 

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "PC Button"
    on_press:
      - switch.toggle: fakebutton
    internal: true

switch:
  - platform: template
    name: "PC Switch"
    optimistic: true
    id: fakebutton
    turn_on_action:
    - switch.turn_on: relay
    - light.turn_on: led
    turn_off_action:
    - switch.turn_off: relay
    - light.turn_off: led
  - platform: gpio
    id: relay
    pin: GPIO12

output:
  - platform: esp8266_pwm
    id: pow_blue_led
    pin:
      number: GPIO13
      inverted: True

light:
  - platform: monochromatic
#    name: "PC Blue LED"
    output: pow_blue_led
    id: led