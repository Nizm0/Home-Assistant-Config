substitutions:
  # Modify variables based on your settings
  hostname: 'esp32_octopi_camera'
  # name: OctoPi camera
  ssid: !secret wifi_ssid
  password: !secret wifi_password
esphome:
  name: $hostname
  platform: ESP32
  board: esp-wrover-kit

  on_boot:
    priority: -10
    # ...
    then:
      - light.turn_on: status_led
wifi:
  ssid: $ssid
  password: $password
  fast_connect: True
  manual_ip:
    # Set this to the IP of the ESP
    static_ip: 192.168.1.137
    # Set this to the IP address of the router. Often ends with .1
    gateway: 192.168.1.1
    # The subnet of the network. 255.255.255.0 works for most home networks.
    subnet: 255.255.255.0 
api:
  reboot_timeout: 0s
ota:
logger:
# web_server:
#   port: 80

# ESP32-CAM
esp32_camera:
  external_clock:
    pin: GPIO0
    frequency: 20MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  power_down_pin: GPIO32
  vertical_flip: true
  brightness: 0

  name: OctoPi camera
  # ... Frame Settings

output:
#flashlight
  - platform: gpio
    pin: GPIO4
    id: gpio_4
#statuslight
  - platform: gpio
    pin:
      number: GPIO33
      inverted: True
    id: gpio_33
light:
#flashlight
  - platform: binary
    output: gpio_4
    name: $hostname flash
#statuslight
  - platform: binary   
    output: gpio_33
    name: $hostname status
    id: status_led
    internal: true

sensor:
  - platform: wifi_signal
    name: $hostname WiFi Signal
    update_interval: 60s
  - platform: uptime
    name: $hostname Uptime


# text_sensor:
#   - platform: version
#     name: $hostname ESPHome Version
#   - platform: wifi_info
#     ssid:
#       name: $hostname WiFi

switch:      
  - platform: restart
    name: $hostname restart

binary_sensor:
  - platform: status
    name: $hostname status