---
#############################################
#                                           #
#                 BW-SHP6                   #
#                                           #
#############################################
substitutions:
  # Modify variables based on your settings
  hostname: 'bw_shp6_01'
  plug_name: BW SHP6 01
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Higher value gives lower watt readout 2020 model uses 0.00290 older uses 0.00117
  current_res: "0.00290"
  # Lower value gives lower voltage readout 2020 model uses 940 older uses 755
  voltage_div: "940"
  # Max Power is 3450W for 15A and 2300W for 10A
  max_power: "2300"
  # 2020 model uses GPIO4 for CF1 older use GPIO14
  cf1_pin: GPIO14
  # reboot_time: 10min
  
esphome:
  name: ${hostname}
  platform: ESP8266
  board: esp8285

wifi:
  ssid: $ssid
  password: $password
  fast_connect: on
  # reboot_timeout: $reboot_time

# Enable logging
logger:

# Enable Home Assistant API
api:
  # reboot_timeout: $reboot_time
  # password: 'YOURAPIPASSWORD'

ota:
  # password: 'YOURAPIPASSWORD'
web_server:
  port: 80

time:
  - platform: homeassistant
    id: homeassistant_time
    
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO13
      inverted: True
    name: ${plug_name} Button
    on_press:
      - switch.toggle: switch1
    internal: true

output:
  - platform: gpio
    pin: GPIO00
    inverted: True
    id: led1

status_led:
  pin:
    number: GPIO02
    inverted: True

switch:
  - platform: restart
    name: ${plug_name} Reboot
    id: hallway_lights_restart
  - platform: gpio
    pin: GPIO15
    id: relay
    restore_mode: RESTORE_DEFAULT_ON
  - platform: template
    id: switch1
    icon: mdi:power-socket-eu
    # optimistic: true
    lambda: |-
      if (id(relay).state) {
        return true;
      } else {
        return false;
      }
    name: ${plug_name} Relay
    turn_on_action:
      - switch.turn_on: relay
      - output.turn_on: led1
    turn_off_action:
      - switch.turn_off: relay
      - output.turn_off: led1

sensor:
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: True
    cf_pin: GPIO05
    cf1_pin: $cf1_pin
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: ${plug_name} Current
      unit_of_measurement: A
      device_class: current
      accuracy_decimals: 3
      icon: mdi:flash-circle
    voltage:
      name: ${plug_name} Voltage
      unit_of_measurement: V
      device_class: voltage
      icon: mdi:flash-circle
      filters:
        - multiply: 1.8
    power:
      name: ${plug_name} Wattage
      unit_of_measurement: W
      device_class: power
      id: ${hostname}_wattage
      icon: mdi:flash-circle
      on_value_range:
        - above: ${max_power}
          then:
            - output.turn_off: led1
            - switch.turn_off: relay
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from ${plug_name}
                data_template:
                  message: Switch turned off because power exceeded ${max_power}W
    change_mode_every: 4
    update_interval: 10s
  - platform: total_daily_energy
    name: ${plug_name} Total Daily Energy
    power_id: ${hostname}_wattage
    unit_of_measurement: kWh
    device_class: energy
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    icon: mdi:clock-alert
      
# Extra sensor to keep track of plug uptime
  - platform: uptime
    name: ${plug_name} Uptime Sensor
    icon: mdi:clock-outline
  # WiFi Signal sensor
  - platform: wifi_signal
    name: ${plug_name} Wifi Signal
    update_interval: 30s
    icon: mdi:wifi