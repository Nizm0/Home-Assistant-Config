- alias: Notify on sun change
  trigger:
  - event: sunrise
    platform: sun
  - event: sunset
    platform: sun
  action:
    # - service: notify.office_tv
    #   data:
    #     data:
    #       color: gray
    #       duration: 5
    #       interrupt: 1
    #       position: center
    #       transparency: 75%
    #     message: '{{states.sun.sun.state}}'
    #     title: Sun is going to
    - service: notify.push_to_chrome
      data_template:
        message: >
          We have {{ trigger.event }}
        title: Sun is changin state
    # - service: notify.push_to_chrome
    #   data_template:
    #     message: >
    #       We have {% if states.sun.sun.state == 'below_horizon' %}sunset{% else %}sunrize{% endif %} "states.sun.sun.state"
    #     title: Sun is changin state

- alias: Change kids lights
  trigger:
    - platform: state
      entity_id: input_boolean.kids_light
  action:
    - service: ifttt.trigger
      data_template:
        event: "{% if trigger.to_state.state == 'on' %}kids_light_on{% else %}kids_light_off{% endif %}"
        value1: "{{ trigger.to_state.state }}"
    # - service: persistent_notification.create
    #   data_template:
    #     message: "Kids room switch changed to {{ trigger.to_state.state }}"
    #     title: "Kids room switch"
    # - service: notify.push_to_chrome
    #   data_template:
    #     message: >
    #       New value is: {{ trigger.to_state.state }}
    #     title: Kids light changed
