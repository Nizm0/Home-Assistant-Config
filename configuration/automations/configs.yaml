- alias: Update config if travis build is successfull
  id: update_config_if_travis_build_is_successfull
  trigger:
    platform: state
    entity_id: sensor.nizm0homeassistantconfig_state
    to: 'passed'
  action:
    - service: script.update_config
    - service: notify.push_to_chrome
      data_template:
        message: >
          Info about update:
            {{ trigger.to_state.state }}
        title: Travis compiled succesfully
- alias: Notify if new devices
  id: notify_if_new_devices
  trigger:
    - platform: event
      event_type: device_tracker_new_device
  action:
    - service: notify.pushbullet_nizmo
      data_template:
        message: >
          New device:
          {{trigger.event.data.host_name}}
          ({{trigger.event.data.entity_id}})
          {{trigger.event.data.source_type}}
        title: New device tracked
        # target: device/oneplus 3
    - service: persistent_notification.create
      data_template:
        message: >
          New device:
          {{trigger.event.data.host_name}}
          ({{trigger.event.data.entity_id}})
          {{trigger.event.data.source_type}}
        title: New device tracked
    - service: notify.push_to_chrome
      data_template:
        message: >
          New device:
          {{trigger.event.data.host_name}}
          {{trigger.event.data.entity_id}}
          {{trigger.event.data.source_type}}
        title: New device tracked
    # - service: notify.home_assistant
    #   data_template:
    #     message: >
    #       New device:
    #       {{trigger.event.data.host_name}}
    #       ({{trigger.event.data.entity_id}})
    #     title: New device 

# - action:
#   - alias: New device
#     data:
#       message: New Device Tracked
#     service: persistent_notification.create
#   alias: New Device Tracked
#   condition: []
#   id: '1509371767814'
#   trigger:
#   - event_data:
#       message: >
#           New device:
#           {{trigger.event.data.host_name}}
#           ({{trigger.event.data.entity_id}})
#           {{trigger.event.data.source_type}}
#       title: New device
#     event_type: device_tracker_new_device
#     platform: event

# - alias: New Device Detection
#   trigger:
#     platform: event
#     event_type: device_tracker_new_device
#   action:
#     - service: notify.telegram
#       data:
#         message: 'A new device just connected to your wifi.'
#     - service: ifttt.trigger
#       data:
#         event: wifi_connected
#         value1: NEW DEVICE!

### Batery status uodate
- alias: Battery alert
  id: battery_alert
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '18:00:00'
  condition:
    - condition: template
      value_template: >
          {% macro battery_level() %}
          {%- set threshold = 20 -%}
          {% set domains = ['light', 'switch', 'sensor', 'zwave', 'lock'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) -%}
          {{ item.name }} ({{ item.attributes['battery_level'] }}){%- if not loop.last %}, {% endif -%}{% endif -%}
          {% if "battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() |trim != "" }}
  action:
    - service: persistent_notification.create
      data_template:
        title: Low Battery levels
        notification_id: low-battery-alert
        message: >
          {% macro battery_level() %}
          {%- set threshold = 20 -%}
          {% set domains = ['light', 'switch', 'sensor', 'zwave', 'lock'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) -%}
          {{ item.name }} ({{ item.attributes['battery_level'] }}){%- if not loop.last %}, {% endif -%}{% endif -%}
          {% if "battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() }}
    # - service: notify.pushover
    #   data_template:
    #     title: "Battery status"
    #     message: >
    #       {% macro battery_level() %}
    #       {%- set threshold = 40 -%}
    #       {% set domains = ['light', 'switch', 'sensor', 'zwave', 'lock'] %}
    #       {% for domain in domains -%}
    #       {% for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
    #       {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) -%}
    #       {{ item.name }} ({{ item.attributes['battery_level'] }}){%- if not loop.last %}, {% endif -%}{% endif -%}
    #       {% if "battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
    #       {{ item.name }} ({{ item.state }}){% if not loop.last %}, {%- endif %} {% endif -%}
    #       {% endfor %}
    #       {%- endfor %}
    #       {% endmacro %}
- id: '1546595642051'
  alias: SD card warning
  trigger:
  - above: '50'
    entity_id: sensor.disk_use_percent_home
    platform: numeric_state
  condition: []
  action:
  - data:
      title: SD Card usage is bigger than 50%
    service: notify.push_to_chrome
- id: '1549924461285'
  alias: Hangout reconnect at 5
  trigger:
  - at: 05:00
    platform: time
  condition: []
  action:
  - service: hangouts.reconnect